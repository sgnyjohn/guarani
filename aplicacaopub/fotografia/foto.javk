package fotografia;

import util.*;
import java.io.*;
import java.net.*;
import bd.*;
import br.org.guarani.servidor.*;
import br.org.guarani.util.*;

//********************************//
//********************************//
public class foto {
 private File arq; //arq original
 private File arqt; //arq miniatura
 private File arqm; //arq modificado
 private boolean modif = false; //indica q exist arq modif
 private File arqv; //arq para ver orig ou modif
 private String teste="?";
 private fotos fts;
 private String nome,nomet,nomec;
 boolean erro=false;
 String sErro="",erroCopia;
 Pedido ped;


 //campos base
 String Data;
 String Dir;
 String Arquivo;
 String Titulo;
 String Autor;
 int Larg,Altu;
 String Resolucao;
 String Obs;

 //********************************//
 public foto(fotos ft,File f) {
  fts = ft;
  ped = fts.ped;
  arq = f;
  init();
 }
 private void init() {
  nomec = arq.getAbsolutePath();
  //ped.on(nomec);
  arqv = arq;
  nome = arq.getName();


  //arquivo modificado
  String nt = fts.draT+nome;
  modif = false;
  nt = str.leftRat(nt,".")+"-m.jpg";
  arqm = new File(nt);
  if (arqm.exists()) {
   modif = true;
   arqv = arqm;
  }

  //miniatura
  nt = fts.draT+nome;
  nt = str.leftRat(nt,".")+".gif";
  arqt = new File(nt);
  nomet = arqt.getName();
  if (!arqt.exists()) {
   if (criaTmp()) {
    criaMiniatura();
    sync();
   } else {
    sErro = "erro copia original!!";
    erro = true;
   }
  }
 }
 //********************************//
 public void original() {
  ped.on("Voltar ");
  arqm.delete();
  arqt.delete();
  sync();
  init();
  edita();
 }
 //********************************//
 public void gira() {
  String graus=ped.getString("graus");
  ped.on("Girar "+graus);
  arqm.delete();
  arqv = arq;
  if (!criaTmp()) {
   ped.on("Girar, Erro criando TMP!"+erroCopia);
  } else {
   executa e = new executa();
   e.exec(ped,"/usr/local/bin/jpegtran -rotate "+graus+
     " -outfile /tmp/tmpm.jpg /tmp/tmp.jpg");
   arquivo or = new arquivo("/tmp/tmpm.jpg");
   ped.on("cp tmpm -> "+arqm.getAbsolutePath());
   or.copia(arqm.getAbsolutePath());
   //deleta miniatura
   arqt.delete();
  }
  sync();
  init();
  edita();
 }
 //********************************//
 public void edita() {
  ped.on(fts.dra+"<br><b>"+nome+"</b>"+
    "\n<table border=0><tr>"+
    //"<td align=center colspan=3>"+fts.dra+" "+nome+
    "\n<tr><td>"+atalhoGira(90)+
    "\n<td align=center><img border=0 src=\""+fotos.dirmh+
    URLEncoder.encode(fts.dra+nomet)+"?"+data.ms()+"\">"+
    "<br>"+atalhoGira(180)+
    "\n<td>"+atalhoGira(270)+
    "\n<tr><td align=center colspan=3>"+Larg+"x"+Altu+" "+Resolucao+"<br>"+Obs+
    "</table>");
  if (modif) {
   ped.on("\n<a href=\"/fotografia/dir.class?op=foto&op1=original"+
   "&arq="+URLEncoder.encode(nome)+
   "&dra="+URLEncoder.encode(fts.dra)+"\">Voltar a Original</a>");
   ped.on("<hr><img width=100% src=\""+fotos.dirmh+
    URLEncoder.encode(fts.dra+arqv.getName())+"\">");
  } else {
   ped.on("<hr><img width=100% src=\""+fotos.dirih+
    URLEncoder.encode(fts.dra+arq.getName())+"\">");
  }
 }
 //********************************//
 private String atalhoGira(int graus) {
  return "\n<a href=\"/fotografia/dir.class?op=foto&op1=gira&graus="+
   graus+"&arq="+URLEncoder.encode(nome)+
   "&dra="+URLEncoder.encode(fts.dra)+"\">"+
   "<img ALT=\"girar "+graus+" graus sentido horário\" "+
   "src=/imagens/acima.gif border=0></a>";
 }
 //********************************//
 public String mostra() {
  if (erro) {
   return nome+"<br>"+sErro;
  } else {
   return "<a href=\""+fotos.dirir+fts.dra+nome+"\">"+nome+"</a><br>"+
    "<a href=\"/fotografia/dir.class?op=foto&op1=edita&dra="+
    URLEncoder.encode(fts.dra)+
    "&arq="+URLEncoder.encode(nome)+"\">"+
    "<img border=0 src=\""+fotos.dirmh+
    URLEncoder.encode(fts.dra+nomet)+"\"></a><br>"+
    Larg+"x"+Altu+" "+Resolucao+"<br>"+Obs;
  }
 }
 //********************************//
 private boolean criaTmp() {
  arquivo or = new arquivo(arqv.getAbsolutePath());
  boolean r = or.copia("/tmp/tmp.jpg");
  if (!r) erroCopia = or.sErro;
  return r;
 }
 //********************************//
 private void criaMiniatura() {
  boolean ok = false;
  int scal=8;
  while (!ok && !erro) {
   executa e = new executa();
   e.exec(ped,"/usr/local/bin/djpeg -v -gif -scale 1/"+scal+" "+
     "-outfile /tmp/tmpt.gif /tmp/tmp.jpg");
   String s = e.getErr();
   //ped.on(s);
   if (s.indexOf("End Of Image")==-1) {
    sErro = "ERRO Conv: "+s;
    erro = true;
   } else if (s.indexOf("width=")>0) {
    Larg = Integer.parseInt(str.substrAtAt(s,"width=",","));
    Altu = Integer.parseInt(str.substrAtAt(s,"height=",","));
    Resolucao = str.substrAtAt(s," Resolucaoity "," ");
    Obs = str.troca(str.substrAtAt(s,":\n","\n"),"\\250","©");
    //testa se compativel...
    ok=true;
   } else {
    erro = true;
    sErro = "não leu tamanho!!";
   }
  }
  if (!erro) {
   arquivo d = new arquivo("/tmp/tmpt.gif");
   if (!d.copia(arqt.getAbsolutePath())) {
    erro = true;
    sErro = "erro copia destino!!";
   }
  }
  if (erro) {
   sErro = "<font color=red>"+sErro+"</font>";
  }
 }
 private void prop() {
  /*rdjpgcom -v Dscn4594.jpg
  comentários....
  JPEG image is 1600w * 1200h, 3 color components, 8 bits per sample
  JPEG process: Baseline
  */
 }
 private void setacoment() {
  /*wrjpgcom -r -c "teste coment" arquivo >novo arquivo.jpg

  */
 }
 private void sync() {
  executa e = new executa();
  e.exec(ped,"sync");
 }
}
